name: Daily GitHub → Dropbox

on:
  workflow_dispatch:
  schedule:
    - cron: "15 19 * * *"   # 02:15 ICT hằng ngày (UTC+7)

permissions:
  contents: read

env:
  # Chủ thể cần backup: user hoặc org, ngăn cách bởi dấu phẩy
  OWNERS: f97
  # Bộ lọc
  INCLUDE_FORKS: "false"
  INCLUDE_ARCHIVED: "false"
  ONLY_PRIVATE: "false"
  # Đích Dropbox (remote:path) — remote name phải trùng trong rclone.conf
  DROPBOX_DEST: db:2025/Github

jobs:
  backup:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: Cài công cụ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq rclone curl

      - name: Viết rclone.conf từ Secrets
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        run: |
          set -euo pipefail
          test -n "${RCLONE_CONF:-}" || { echo "Thiếu secrets.RCLONE_CONF"; exit 1; }
          RCLONE_CONFIG_FILE="$RUNNER_TEMP/rclone.conf"
          echo "$RCLONE_CONF" > "$RCLONE_CONFIG_FILE"
          echo "RCLONE_CONFIG_FILE=$RCLONE_CONFIG_FILE" >> "$GITHUB_ENV"

      - name: ZIP code của repo và upload Dropbox
        env:
          GH_PAT: ${{ secrets.GH_PAT }}   # PAT cần scope: repo, read:org (nếu có org)
        run: |
          set -euo pipefail
          test -n "${GH_PAT:-}" || { echo "Thiếu secrets.GH_PAT"; exit 1; }
          echo "::add-mask::$GH_PAT"

          ZIP_ROOT="$GITHUB_WORKSPACE/zips"
          mkdir -p "$ZIP_ROOT"
          DATE="$(date -u +%F)"

          IFS=',' read -ra owners <<< "$OWNERS"

          # Hàm liệt kê repo theo owner (phân trang)
          gh_api() { # $1 = owner
            local o="$1"
            local otype
            otype=$(curl -fsSL -H "Authorization: token $GH_PAT" https://api.github.com/users/$o | jq -r .type)
            local base
            if [[ "$otype" == "Organization" ]]; then
              base="https://api.github.com/orgs/$o/repos"
            else
              base="https://api.github.com/users/$o/repos"
            fi
            local page=1 data
            while :; do
              local url="${base}?per_page=100&type=all&page=${page}"
              data=$(curl -fsSL -H "Authorization: token $GH_PAT" "$url")
              [[ "$(jq 'length' <<<"$data")" -eq 0 ]] && break
              jq -c '.[]' <<<"$data"
              ((page++))
            done
          }

          for owner in "${owners[@]}"; do
            echo "==> Owner: $owner"
            gh_api "$owner" | jq -r --argjson incFork "$INCLUDE_FORKS" \
                                 --argjson incArch "$INCLUDE_ARCHIVED" \
                                 --argjson onlyPriv "$ONLY_PRIVATE" '
              select(($incFork==true) or (.fork|not)) |
              select(($incArch==true) or (.archived|not)) |
              select(($onlyPriv!=true) or (.private==true)) |
              [.name, .owner.login, .default_branch] | @tsv
            ' | while IFS=$'\t' read -r name login default_branch; do
              out_dir="$ZIP_ROOT/$login"
              mkdir -p "$out_dir"
              # Tên file: repo-branch-YYYY-MM-DD.zip
              filename="${name}-${default_branch}-${DATE}.zip"
              url="https://api.github.com/repos/${login}/${name}/zipball/${default_branch}"
              echo "  [+] ZIP $login/$name@$default_branch -> $filename"
              # Tải ZIP code (không .git) từ GitHub (theo branch mặc định)
              curl -fsSL -H "Authorization: token $GH_PAT" \
                         -H "X-GitHub-Api-Version: 2022-11-28" \
                         -o "$out_dir/$filename" "$url"
              # Bảo vệ: file rỗng thì coi là lỗi
              [[ -s "$out_dir/$filename" ]] || { echo "  [!] ZIP rỗng: $filename"; exit 1; }
            done
          done

          # Upload lên Dropbox theo ngày, giữ lịch sử từng ngày
          export RCLONE_CONFIG="${RCLONE_CONFIG_FILE:?}"
          rclone copy "$ZIP_ROOT" "${DROPBOX_DEST}/daily/${DATE}" \
            --fast-list --checkers=32 --transfers=16 --verbose

      - name: Dọn dẹp
        if: always()
        run: rm -f "${RCLONE_CONFIG_FILE:-}"
